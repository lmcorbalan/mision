version: '2'
services:
  db:
    image: mysql:5.7
    # volumes:
    #   - "./.data/db:/var/lib/mysql"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: root
  web:
    build: .
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    volumes:
      - .:/myapp
    environment:
      RAILS_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - db

# # service configuration for our dockerized Rails app
# app:

#   # use the Dockerfile next to this file
#   build: .

#   # map our application source code, in full, to the application root of our container
#   volumes:
#     - .:/var/www/docker_example

#   # sources environment variable configuration for our app
#   env_file: .env

#   # rely on the RAILS_ENV value of the host machine
#   environment:
#     RAILS_ENV: $RAILS_ENV

#   # makes the app container aware of the DB container
#   links:
#     - db

#   # expose the port we configured Unicorn to bind to
#   expose:
#     - "3000"
# db:
#     image: mysql:5.7
#     volumes:
#       - "./.data/db:/var/lib/mysql"
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#       MYSQL_DATABASE: root
# # service configuration for our web server
# web:

#   # set the build context to the root of the Rails app
#   build: .

#   # build with a different Dockerfile
#   dockerfile: config/containers/Dockerfile-nginx

#   # makes the web container aware of the app container
#   links:
#     - app

#   # use whatever volumes are configured for the app container
#   volumes_from:
#     - app

#   # expose the port we configured Nginx to bind to
#   ports:
#     - "80:80"
